package de.cit.backend.mgmt.persistence.model;
// Generated 10.12.2017 16:49:45 by Hibernate Tools 5.2.3.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Userdata generated by hbm2java
 */
@Entity
@Table(name = "USERDATA", catalog = "citBitDB", uniqueConstraints = @UniqueConstraint(columnNames = "NAME"))
public class UserDTO implements java.io.Serializable {

	private Integer id;
	private String email;
	private String password;
	private String name;
	private Date registeredSince;
	private UserRoleEnum role;
	
	private List<ProjectDTO> joinedProjects = new ArrayList<>();
	private List<ProjectDTO> createdProjects = new ArrayList<>();

	public UserDTO() {
	}

	public UserDTO(String email, String password, String name, Date registeredSince) {
		this.email = email;
		this.password = password;
		this.name = name;
		this.registeredSince = registeredSince;
	}

	public UserDTO(String email, String password, String name, Date registeredSince, List<ProjectDTO> joinedProjects,
			List<ProjectDTO> projects) {
		this.email = email;
		this.password = password;
		this.name = name;
		this.registeredSince = registeredSince;
		this.joinedProjects = joinedProjects;
		this.createdProjects = projects;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "EMAIL", nullable = false, length = 128)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "PASSWORD", nullable = false, length = 128)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "NAME", unique = true, nullable = false, length = 128)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "REGISTERED_SINCE", nullable = false, length = 19)
	public Date getRegisteredSince() {
		return this.registeredSince;
	}

	public void setRegisteredSince(Date registeredSince) {
		this.registeredSince = registeredSince;
	}

	@ManyToMany
    @JoinTable(name="USER_PROJECT",
    	joinColumns= @JoinColumn(name="USER_ID", referencedColumnName="ID"),
    	inverseJoinColumns= @JoinColumn(name="PROJECT_ID", referencedColumnName="ID"))
	public List<ProjectDTO> getJoinedProjects() {
		return this.joinedProjects;
	}

	public void setJoinedProjects(List<ProjectDTO> joinedProjects) {
		this.joinedProjects = joinedProjects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userdata")
	public List<ProjectDTO> getCreatedProjects() {
		return this.createdProjects;
	}

	public void setCreatedProjects(List<ProjectDTO> projects) {
		this.createdProjects = projects;
	}

	@Column(name = "ROLE")
	@Enumerated(EnumType.ORDINAL)
	public UserRoleEnum getRole() {
		return this.role;
	}
	
	public void setRole(UserRoleEnum role) {
		this.role = role;
	}
}
