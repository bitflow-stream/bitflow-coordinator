package de.cit.backend.persistence.model;
// Generated 04.12.2017 14:01:29 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "PROJECT", catalog = "citBitDB")
public class Project implements java.io.Serializable {

	private Integer id;
	private Userdata userdata;
	private String name;
	private Date createdAt;
	private Set<UserProject> userProjects = new HashSet<UserProject>(0);
	private Set<Pipeline> pipelines = new HashSet<Pipeline>(0);

	public Project() {
	}

	public Project(Userdata userdata, String name, Date createdAt) {
		this.userdata = userdata;
		this.name = name;
		this.createdAt = createdAt;
	}

	public Project(Userdata userdata, String name, Date createdAt, Set<UserProject> userProjects,
			Set<Pipeline> pipelines) {
		this.userdata = userdata;
		this.name = name;
		this.createdAt = createdAt;
		this.userProjects = userProjects;
		this.pipelines = pipelines;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATE_USER_ID", nullable = false)
	public Userdata getUserdata() {
		return this.userdata;
	}

	public void setUserdata(Userdata userdata) {
		this.userdata = userdata;
	}

	@Column(name = "NAME", nullable = false, length = 256)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_AT", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<UserProject> getUserProjects() {
		return this.userProjects;
	}

	public void setUserProjects(Set<UserProject> userProjects) {
		this.userProjects = userProjects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Pipeline> getPipelines() {
		return this.pipelines;
	}

	public void setPipelines(Set<Pipeline> pipelines) {
		this.pipelines = pipelines;
	}

}
