/*
 * bitflow-process-agent: REST-API
 * Process-Agent-REST-API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: sven.carlin@campus.tu-berlin.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Capability
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-11T18:05:32.736+01:00")
public class Capability {
  @SerializedName("Name")
  private String name = null;

  @SerializedName("IsFork")
  private Boolean isFork = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("RequiredParams")
  private List<String> requiredParams = null;

  @SerializedName("OptionalParams")
  private List<String> optionalParams = null;

  public Capability name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "avg", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Capability isFork(Boolean isFork) {
    this.isFork = isFork;
    return this;
  }

   /**
   * Get isFork
   * @return isFork
  **/
  @ApiModelProperty(example = "false", value = "")
  public Boolean getIsFork() {
    return isFork;
  }

  public void setIsFork(Boolean isFork) {
    this.isFork = isFork;
  }

  public Capability description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "Add an average metric for every incoming metric. Optional parameter: duration or number of samples. Optional parameters: [window]", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Capability requiredParams(List<String> requiredParams) {
    this.requiredParams = requiredParams;
    return this;
  }

  public Capability addRequiredParamsItem(String requiredParamsItem) {
    if (this.requiredParams == null) {
      this.requiredParams = new ArrayList<String>();
    }
    this.requiredParams.add(requiredParamsItem);
    return this;
  }

   /**
   * Get requiredParams
   * @return requiredParams
  **/
  @ApiModelProperty(example = "[]", value = "")
  public List<String> getRequiredParams() {
    return requiredParams;
  }

  public void setRequiredParams(List<String> requiredParams) {
    this.requiredParams = requiredParams;
  }

  public Capability optionalParams(List<String> optionalParams) {
    this.optionalParams = optionalParams;
    return this;
  }

  public Capability addOptionalParamsItem(String optionalParamsItem) {
    if (this.optionalParams == null) {
      this.optionalParams = new ArrayList<String>();
    }
    this.optionalParams.add(optionalParamsItem);
    return this;
  }

   /**
   * Get optionalParams
   * @return optionalParams
  **/
  @ApiModelProperty(example = "[\"window\"]", value = "")
  public List<String> getOptionalParams() {
    return optionalParams;
  }

  public void setOptionalParams(List<String> optionalParams) {
    this.optionalParams = optionalParams;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Capability capability = (Capability) o;
    return Objects.equals(this.name, capability.name) &&
        Objects.equals(this.isFork, capability.isFork) &&
        Objects.equals(this.description, capability.description) &&
        Objects.equals(this.requiredParams, capability.requiredParams) &&
        Objects.equals(this.optionalParams, capability.optionalParams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, isFork, description, requiredParams, optionalParams);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Capability {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isFork: ").append(toIndentedString(isFork)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    requiredParams: ").append(toIndentedString(requiredParams)).append("\n");
    sb.append("    optionalParams: ").append(toIndentedString(optionalParams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

